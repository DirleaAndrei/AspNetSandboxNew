using System;
using System.Collections.Generic;
using AspNetSandbox.Models;
using Microsoft.AspNetCore.Mvc;

namespace AspNetSandbox
{
    [Route("api/[controller]")]
    [ApiController]
    public class BooksController : ControllerBase
    {
    	private readonly ApplicationDbContext _context;
        private readonly IBooksService booksService;

        public BooksController(ApplicationDbContext context)
        {
            _context = context;
        }

        [HttpGet]
        public async Task<IActionResult> Get()
        {
            return await _context.Books.ToListAsync();
        }

        /// <summary>Gets the specified book by id.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>
        ///   Book object.
        /// </returns>
        [HttpGet("{id}")]
        public async Task<IActionResult> Get(int id)
        {
            try
            {
            	var book = await _context.Books
                .FirstOrDefaultAsync(m => m.BookId == id);
                return Ok(book);
            }
            catch (Exception)
            {
                return NotFound();
            }
        }

        [HttpPost]
        public void Post([FromBody] Book book)
        {
            if (ModelState.IsValid)
            {
                _context.Add(book);
                await _context.SaveChangesAsync();
                return RedirectToAction(nameof(Index));
            }
        }

        /// <summary>Updated book at specific id.</summary>
        /// <param name="id">The identifier.</param>
        /// <param name="updatedBook">The updated book.</param>
        /// <returns>Action result.</returns>
        [HttpPut("{id}")]
        public ActionResult Put(int id, [FromBody] Book updatedBook)
        {
            try
            {
                booksService.UpdateBookById(id, updatedBook);
                return Ok();
            }
            catch (Exception)
            {
                return NotFound();
            }
        }

        [HttpDelete("{id}")]
        public void Delete(int id)
        {
            booksService.DeleteBookById(id);
        }
    }
}
